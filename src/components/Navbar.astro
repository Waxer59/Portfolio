---
import { getLangFromUrl, useTranslations } from '@i18n/utils'
import LanguageSwitch from './LanguageSwitch.astro'
import ThemeToggler from './ThemeToggler.astro'
import HamburguerMenuIcon from './icons/HamburguerMenuIcon.astro'
import XMarkIcon from './icons/XMarkIcon.astro'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<header class="flex items-center mt-10 text-secondary text-lg justify-between">
  <h1 class="font-bold uppercase tracking-wide">Hugo Boyano Escoz</h1>
  <nav
    id="menu"
    class="hidden items-start font-bold gap-4 md:flex flex-col absolute left-0 top-0 h-full text-3xl w-full bg-primary p-6 z-50 md:bg-transparent md:relative md:font-normal md:text-lg md:flex-row md:items-center md:p-0 md:h-auto md:w-auto">
    <button
      id="btn-menu-close"
      class="hover:text-accent ml-auto md:hidden transition-colors"
      ><XMarkIcon class="w-9 h-9" /></button
    >
    <a
      href={`#${t('nav.projects')}`}
      class="transition-colors hover:text-accent">{t('nav.projects')}</a
    >
    <a
      href={`#${t('nav.skillset')}`}
      class="transition-colors hover:text-accent">{t('nav.skillset')}</a
    >
    <a href={`#${t('nav.aboutMe')}`} class="transition-colors hover:text-accent"
      >{t('nav.aboutMe')}</a
    >
  </nav>
  <div class="flex items-center gap-4">
    <button
      id="btn-menu"
      class="block md:hidden cursor-pointer hover:text-accent transition-colors"
      ><HamburguerMenuIcon /></button
    >
    <LanguageSwitch />
    <ThemeToggler />
  </div>
</header>

<script>
  const btnMenu = document.querySelector('#btn-menu') as HTMLButtonElement
  const btnMenuClose = document.querySelector(
    '#btn-menu-close'
  ) as HTMLButtonElement
  const menu = document.querySelector('#menu') as HTMLDivElement
  const body = document.querySelector('body') as HTMLBodyElement
  const menuChilds = menu.childNodes

  const showMenu = () => {
    body.classList.add('overflow-hidden')
    menu.classList.remove('hidden')
    menu.classList.add('flex')
  }

  const hideMenu = () => {
    body.classList.remove('overflow-hidden')
    menu.classList.add('hidden')
    menu.classList.remove('flex')
  }

  menuChilds.forEach((child) => {
    if (child === btnMenuClose) return

    child.addEventListener('click', () => {
      hideMenu()
    })
  })

  btnMenu.addEventListener('click', () => {
    // @ts-expect-error View transitions API is not embedded in Ts definition yet
    if (!document.startViewTransition) showMenu()
    // @ts-expect-error View transitions API is not embedded in Ts definition yet
    document.startViewTransition(showMenu)
  })

  btnMenuClose.addEventListener('click', () => {
    // @ts-expect-error View transitions API is not embedded in Ts definition yet
    if (!document.startViewTransition) hideMenu()
    // @ts-expect-error View transitions API is not embedded in Ts definition yet
    document.startViewTransition(hideMenu)
  })
</script>
