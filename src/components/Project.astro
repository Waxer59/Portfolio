---
import { getLangFromUrl, useTranslations } from '@i18n/utils'
import { Image } from 'astro:assets'
import type { ProjectDescriptionData, TagDetails } from '../types/types'
import type { ImageMetadata } from 'astro'
import LinkButton from '@components/LinkButton.astro'
import GithubIcon from '@components/icons/GithubIcon.astro'
import LinkIcon from '@components/icons/LinkIcon.astro'

interface Props {
  title: string
  tags: TagDetails[]
  description: ProjectDescriptionData
  imgFile: string
  links: {
    github?: string
    preview?: string
  }
}

const { title, tags, description, imgFile, links } = Astro.props

const imgPath = `/src/images/projects/${imgFile}`
const imgs = import.meta.glob<{ default: ImageMetadata }>(
  '/src/images/projects/*.{jpeg,jpg,png,gif,webp}'
)
const img = imgs[imgPath]
if (!img) {
  throw new Error(
    `"${imgPath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  )
}

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<li class="flex flex-col md:items-center md:flex-row gap-8 group">
  <div
    class="overflow-hidden rounded-md shadow-lg dark:shadow-none border-zinc-50/5 border-2">
    <Image
      src={img()}
      alt={`${t('alt.project')} '${title}`}
      class="object-cover w-full md:w-[450px] h-56 transition duration-500 overflow-hidden group-hover:scale-105"
    />
  </div>
  <div class="flex flex-col gap-4 md:w-1/2">
    <h3 class="text-tertiary text-2xl font-bold capitalize">{title}</h3>
    <ul class="flex gap-2 flex-wrap">
      {
        tags.map((tag) => (
          <li>
            <span
              class={`${tag.class} flex gap-x-2 rounded-full text-xs py-1 px-2`}>
              <tag.icon class="size-4" />
              {tag.name}
            </span>
          </li>
        ))
      }
    </ul>
    <p class="text-secondary" set:html={description[lang]} />
    <footer class="flex items-center gap-4">
      {
        links?.github && (
          <LinkButton href={links.github}>
            <GithubIcon />
            {t('project.code')}
          </LinkButton>
        )
      }
      {
        links?.preview && (
          <LinkButton href={links.preview}>
            <LinkIcon />
            {t('project.preview')}
          </LinkButton>
        )
      }
    </footer>
  </div>
</li>
