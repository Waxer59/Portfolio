---
import { getLangFromUrl, useTranslations } from '@/i18n/utils'
import MoonIcon from '@components/icons/MoonIcon.astro'
import SunIcon from '@components/icons/SunIcon.astro'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
---

<button id="btn-theme-toggler" aria-label={t('aria.switchTheme')}>
  <span id="theme-toggler-dark-icon" class="hidden dark:block">
    <MoonIcon class="hover:text-accent transition-colors" />
  </span>
  <span id="theme-toggler-light-icon" class="block dark:hidden">
    <SunIcon class="hover:text-accent transition-colors" />
  </span>
</button>

<script>
  const LOCAL_STORAGE_THEME_KEY = 'theme'
  const themeValue = localStorage.getItem(LOCAL_STORAGE_THEME_KEY)
  const html = document.querySelector('html') as HTMLElement

  enum THEMES {
    dark = 'dark',
    light = 'light'
  }

  const setThemePreference = (theme: THEMES) => {
    if (theme === THEMES.dark) {
      localStorage.setItem(LOCAL_STORAGE_THEME_KEY, THEMES.dark)
      html.classList.add(THEMES.dark)
    } else {
      localStorage.setItem(LOCAL_STORAGE_THEME_KEY, THEMES.light)
      html.classList.remove(THEMES.dark)
    }
  }

  const switchTheme = () => {
    const currentTheme = localStorage.getItem(LOCAL_STORAGE_THEME_KEY)
    const isDarkTheme = currentTheme === THEMES.dark

    if (isDarkTheme || !currentTheme) {
      setThemePreference(THEMES.light)
    } else {
      setThemePreference(THEMES.dark)
    }
  }

  document.addEventListener('astro:after-swap', () => {
    const selectedTheme = localStorage.getItem(
      LOCAL_STORAGE_THEME_KEY
    ) as THEMES
    setThemePreference(selectedTheme)
  })

  document.addEventListener('astro:page-load', () => {
    const btnThemeToggler = document.querySelector(
      '#btn-theme-toggler'
    ) as HTMLButtonElement

    btnThemeToggler.addEventListener('click', () => {
      if (!document.startViewTransition) switchTheme()
      document.startViewTransition(switchTheme)
    })
  })

  if (themeValue === THEMES.light) {
    if (!document.startViewTransition) setThemePreference(THEMES.light)
    document.startViewTransition(() => setThemePreference(THEMES.light))
  }
</script>
